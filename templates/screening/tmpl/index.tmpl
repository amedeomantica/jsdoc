<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Screening API Reference-<?js= title ?></title>

	<script src="http://shjs.sourceforge.net/sh_main.min.js"> </script>
    <script src="http://shjs.sourceforge.net/lang/sh_javascript.min.js"> </script>
    <script type="text/javascript">

      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-445875-15']);
      _gaq.push(['_setDomainName', 'tetsubo.org']);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();

    </script>

    <link type="text/css" rel="stylesheet" href="styles/node-dark.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
</head>

<body>

<div id="bar">

    <a href="http://tetsubo.org/mot/screening-api/"><h2>Screening API Reference</h2></a>

    <div class="nav">
        <a href="http://tetsubo.org/docs/api-reference/api-feedback/">Send feedback!</a>
        <a href="http://tetsubo.org/go/sdocs/">Screening Docs</a>
        <a href="http://tetsubo.org/">tetsubo.org</a>
    </div>

</div>

<div id="main">

<nav>
    <?js= nav ?>
</nav>


    <h1 class="page-title">Index</h1>
    <article>
    <section>

<p>
        The Screening API demonstrates the code syntax and use of the following Screening JavaScript objects and corresponding interfaces. For your guide, examples are provided:</p>
    <table class="zebra-striped" style="table-layout: ">
        <thead>
            <tr>
                <th>
                    Object
                </th>
                <th>
                    Interface
                </th>
                <th>
                    Example
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <code>Script</code>
                </td>
                <td>
                    <code>script.</code>
                </td>
                <td>
                    //script is global, accessed anywhere<br>
                    <code>script.wait(1000);</code>
                </td>
            </tr>
            <tr>
                <td>
                    <code>WebDriverAgent</code>
                </td>
                <td>
                    <code>agent.</code>
                </td>
                <td>
                    <code>var agent = new Agent();</code>
                </td>
            </tr>
            <tr>
                <td>
                    <code>WebDriverComponent</code>
                </td>
                <td>
                    <code>component.</code>
                </td>
                <td>
                    <code>var cmp = agent.component('#nodeId');</code>
                </td>
            </tr>
            <tr>
                <td>
                    <code>WebDriverElement</code>
                </td>
                <td>
                    <code>element.</code>
                </td>
                <td>
                    <code>var el = agent.element('#nodeId');</code>
                </td>
            </tr>
            <tr>
                <td>
                    <code>WebDriverElementArray</code>
                </td>
                <td>
                    <code>elements.</code>
                </td>
                <td>
                    <code>var els = agent.elements('.className');</code>
                </td>
            </tr>
        </tbody>
    </table>
        <b>Important note:</b> All interactions with the Application Under Test (AUT) happen through the Agent interface or one of the objects queried by it. The type of
        <code>agent</code> object will be determined by the agent device to which it is being connected. For example, connections to a WebDriver server will be managed
        with a <code>WebDriverAgent</code> object. In your scripts the correct type of agent will be returned automatically when creating an instance of the generic <code>Agent</code> object.

</div>
    </section>
    </article>

<br clear="both">

<footer>
</footer>

<script> sh_highlightDocument(); </script>
</body>
</html>